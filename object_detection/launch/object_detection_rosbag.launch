<launch>

  <arg name="rosbag_name" default="bike_0_5_smb"/>
  <arg name="rosbag_path" default="/media/oilter/D4561E4E561E31AA/SemesterProject/objectsFinal/$(arg rosbag_name).bag"/>

  <include file="$(find smb_description)/launch/debug.launch">
    <arg name="visualize" value="1"/>
  </include>

  <arg name="record_data" default="True"/>

  <arg name="validate" default="True"/>
  <arg name="input_camera_name" default="/versavis/cam0" />
  <arg name="lidar_topic" default='/rslidar_points'/>
  <arg name="optical_frame_name" default='blackfly_right_optical_link'/>

  <!--Debayer the image-->
  <node pkg="image_proc" type="image_proc" name="debayer" ns="$(arg input_camera_name)/" />

  <!--Undistored the debayered image-->
  <arg name="calib_path" default="$(find object_detection)/cfg/smb264_camera_model.yaml"/>
  <node name="image_undistort_node" pkg="image_undistort" type="image_undistort_node" output="screen" clear_params="true">
    <param name="process_image" value="true"/> 
    <param name="input_camera_namespace" value="versavis"/>      
    <param name="input_camera_info_from_ros_params" value = "true"/>    
    <param name="scale" value="1.0"/>
    <param name="output_camera_info_source" value="auto_generated"/>   <!--auto_generated,match_input--> 
    <param name="publish_tf" value="false"/>
    <param name="output_frame" value="$(arg optical_frame_name)"/>
    <rosparam file="$(arg calib_path)"/>
    <remap from="input/image" to="$(arg input_camera_name)/image_color"/>
    <remap from="output/image" to="$(arg input_camera_name)/undistorted"/>
    <remap from="output/camera_info" to="$(arg input_camera_name)/undistorted/info"/>
  </node>

  <!--Tag detection for validation purposes-->
  <group if="$(eval arg('validate'))">
    <include file="$(find object_detection)/launch/continuous_tag_detection.launch">
      <arg name="tags_file" value="$(find object_detection)/cfg/apriltags_tags5.yaml"/>
      <arg name="settings_file" default="$(find object_detection)/cfg/apriltags_settings.yaml" />
      <arg name="node_namespace" default="apriltag_ros_continuous_node" />
      <arg name="camera_name" default="$(arg input_camera_name)" />
      <arg name="image_topic" default="undistorted" />
      <arg name="camera_frame" default="$(arg optical_frame_name)" />
    </include>
  </group>

  <!--Object detection node-->
  <node name="objectify" pkg="object_detection" type="node.py" output="screen">
    <!--Input related-->
    <param name="camera_topic" value='$(arg input_camera_name)/undistorted'/>
    <param name="camera_info_topic" value='$(arg input_camera_name)/camera_info'/>
    <param name="lidar_topic" value='$(arg lidar_topic)'/>
    <param name="camera_info_callback_sleep" value="20.0"/>

    <param name="optical_frame" value='$(arg optical_frame_name)'/>
    <param name="map_frame" value='map'/>

    <!-- Record data and error -->
    <param name="validate" value="$(arg validate)"/>
    <param name="record_data" value="$(arg record_data)"/>
    <param name="on_object_tag" value="1"/>
    <param name="statistic_txt" value="$(arg rosbag_name)"/>

    <!--Output related-->
    <param name="visualize" value='true'/>
    <param name="visualize_all_points" value='false'/>
    <param name="out_image_pub_topic" value='$(arg input_camera_name)/objects'/>

    <param name="create_obj_marker" value='true'/>
    <param name="obj_marker_topic" value='/object'/>

    <!--Detection related-->
    <param name="multiple_instance" value='false'/>

    <!--Object detection related-->
    <param name="architecture" value='yolo'/>
    <param name="model" value='yolov5n'/>
    <param name="device" value='cpu'/>
    <param name="confident" value='0.2'/>
    <param name="iou" value='0.1'/>
    <param name="classes" value='[1]'/>

    <!--Object localization related-->
    <param name="model_method" value='hdbscan'/>
    <param name="localizer_config" value='$(find object_detection)/cfg/objectlocalizer.yaml'/>

  </node>

  <node pkg="rosbag" type="play" name="player" output="screen" args="-d 5 -s 6 -r 0.4 $(arg rosbag_path)" required = "false"/>

</launch>